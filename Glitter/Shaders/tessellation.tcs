#version 410 core                                                                               
                                                                                                
// define the number of CPs in the output patch                                                 
layout (vertices = 1) out;  

uniform float tessellationLevel;

in vec3 Pos_CS_in[];
in vec3 Nor_CS_in[];
in vec2 Tex_CS_in[];
in vec3 Tan_CS_in[];
in int TriId_CS_in[];
in float lod_CS_in[];
in float edgeLod_CS_in[];

struct OutputPatch                                                                              
{                                                                                               
    vec3 WorldPos_B030;                                                                                                                                                
    vec3 WorldPos_B003;                                                                                                                                                 
    vec3 WorldPos_B300;                                                                                                                                                
    vec3 Normal[3];         
    vec2 TexCoord[3];
    vec3 Tangent[3];
    int  TriId;
}; 

// attributes of the output CPs                                                                 
out patch OutputPatch oPatch;                                                                                                
                                                                                                                                                                 
void CalcPositions()                                                                            
{                                                                                               
    // The original vertices stay the same                                                      
    oPatch.WorldPos_B030 = Pos_CS_in[0];                                                   
    oPatch.WorldPos_B003 = Pos_CS_in[1];                                                   
    oPatch.WorldPos_B300 = Pos_CS_in[2];                                                                             
}                                                                                               
                                                                                                
void main()                                                                                     
{                                                                                               
    // Set the control points of the output patch                                               
    for (int i = 0 ; i < 3 ; i++) {                                                             
        oPatch.Normal[i] = Nor_CS_in[i];  
        oPatch.Tangent[i] = Tan_CS_in[i];
        oPatch.TexCoord[i] = Tex_CS_in[i];                                                 
    }
    oPatch.TriId = TriId_CS_in[0];

    CalcPositions();                                                                            
                                                                                                
    // Calculate the tessellation levels     
    if (tessellationLevel >= 1.0){
        gl_TessLevelOuter[0] = tessellationLevel;                                                  
        gl_TessLevelOuter[1] = tessellationLevel;                                                  
        gl_TessLevelOuter[2] = tessellationLevel;                                                  
        gl_TessLevelInner[0] = tessellationLevel;     
    } else {
        gl_TessLevelOuter[0] = edgeLod_CS_in[0];                                                  
        gl_TessLevelOuter[1] = edgeLod_CS_in[1];                                                  
        gl_TessLevelOuter[2] = edgeLod_CS_in[2];                                                  
        gl_TessLevelInner[0] = lod_CS_in[0];     
    }
}                
